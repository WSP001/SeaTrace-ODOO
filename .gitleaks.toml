title = "SeaTrace Gitleaks Config - PUBLIC Repo"

# Purpose: Prevent accidental commit of secrets in PUBLIC repo
# Classification: PUBLIC-UNLIMITED (security tool)
# FOR THE COMMONS GOOD! üåçüêüüöÄ

[extend]
# Use default gitleaks config as baseline
useDefault = true

[[rules]]
id = "postman-api-key"
description = "Postman API Key (PMAK-...)"
regex = '''PMAK-[a-f0-9]{24}-[a-f0-9]{34}'''
tags = ["key", "postman", "api"]
[[rules.Entropies]]
    Min = "3.5"
    Max = "8"

[[rules]]
id = "generic-api-key"
description = "Generic API Key"
regex = '''(?i)(api[_-]?key|apikey|api[_-]?token)['"]?\s*[:=]\s*['"]?([a-z0-9]{32,})'''
tags = ["key", "api", "generic"]

[[rules]]
id = "jwt-token"
description = "JSON Web Token"
regex = '''eyJ[A-Za-z0-9_-]{10,}\.[A-Za-z0-9_-]{10,}\.[A-Za-z0-9_-]{10,}'''
tags = ["jwt", "token"]

[[rules]]
id = "mongodb-connection-string"
description = "MongoDB Connection String"
regex = '''mongodb(\+srv)?:\/\/[^\s]+'''
tags = ["database", "mongodb", "connection"]

[[rules]]
id = "hmac-secret"
description = "HMAC Secret Key"
regex = '''(?i)(hmac[_-]?secret|hmac[_-]?key)['"]?\s*[:=]\s*['"]?([a-z0-9+/=]{32,})'''
tags = ["key", "hmac", "secret"]

[[rules]]
id = "aws-access-key"
description = "AWS Access Key ID"
regex = '''(?i)(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}'''
tags = ["aws", "key", "access"]

[[rules]]
id = "aws-secret-key"
description = "AWS Secret Access Key"
regex = '''(?i)aws[_]?secret[_]?access[_]?key['"]?\s*[:=]\s*['"]?([a-z0-9/+=]{40})'''
tags = ["aws", "secret", "key"]

[[rules]]
id = "azure-storage-key"
description = "Azure Storage Account Key"
regex = '''(?i)accountkey['"]?\s*[:=]\s*['"]?([a-z0-9/+=]{88})'''
tags = ["azure", "storage", "key"]

[[rules]]
id = "github-token"
description = "GitHub Personal Access Token"
regex = '''ghp_[A-Za-z0-9]{36}'''
tags = ["github", "token", "pat"]

[[rules]]
id = "private-key-pem"
description = "Private Key (PEM format)"
regex = '''-----BEGIN (RSA|EC|OPENSSH|DSA|ENCRYPTED) PRIVATE KEY-----'''
tags = ["private-key", "pem", "rsa", "ec"]

[[rules]]
id = "license-key-seatrace"
description = "SeaTrace License Key"
regex = '''(?i)(seatrace[_-]?license|license[_-]?key)['"]?\s*[:=]\s*['"]?(SEATRACE[_-][A-Z0-9-]{10,})'''
tags = ["seatrace", "license", "key"]

[[rules]]
id = "password-field"
description = "Password in code"
regex = '''(?i)password['"]?\s*[:=]\s*['"]([^'"\s]{8,})'''
tags = ["password", "credential"]

[[rules]]
id = "bearer-token"
description = "Bearer Token"
regex = '''(?i)bearer\s+[a-z0-9\-._~+/]+=*'''
tags = ["bearer", "token", "auth"]

[allowlist]
description = "Allowlist for false positives"

# Paths to ignore
paths = [
    '''^\.gitleaks\.toml$''',
    '''^\.git/''',
    '''^node_modules/''',
    '''(.*?)(jpg|gif|doc|pdf|bin|png|svg|ico)$''',
    '''^\.github/workflows/''',  # GitHub Actions may contain example tokens
    '''^demo/postman/.*\.env\.json$''',  # Demo environments (sanitized)
]

# Specific files to allow
regexes = [
    '''DEMO-QR-[0-9]{4}''',  # Demo QR codes
    '''PUBLIC-DEMO-LICENSE''',  # Demo license key
    '''EXAMPLE_API_KEY''',  # Documentation examples
    '''your-api-key-here''',  # Placeholder text
    '''<YOUR_API_KEY>''',  # Placeholder text
    '''xxxxx-xxxxx-xxxxx''',  # Placeholder text
]

# Commits to ignore (if needed)
commits = []

# Stop scanning at specific commits (optional)
stopwords = []
