worker_processes auto;
events { worker_connections 2048; }

http {
  log_format json_combined escape=json
    '{"time":"$time_iso8601","remote_addr":"$remote_addr","request":"$request",'
    '"status":$status,"bytes":$bytes_sent,"upstream":"$upstream_addr",'
    '"request_time":$request_time,"pillar":"$pillar"}';
  access_log /var/log/nginx/access.log json_combined;
  error_log  /var/log/nginx/error.log warn;

  gzip on;
  gzip_types text/css application/javascript application/json;

  limit_req_zone $binary_remote_addr zone=perip:10m rate=60r/m;

  upstream seaside   { server seaside:8001; keepalive 32; }
  upstream deckside  { server deckside:8002; keepalive 32; }
  upstream dockside  { server dockside:8003; keepalive 32; }
  upstream marketside{ server marketside:8004; keepalive 32; }

  server {
    listen 80;
    server_name _;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    client_max_body_size 10m;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    location ~ ^/seaside/(.*)$ {
      set $pillar "seaside";
      limit_req zone=perip burst=20 nodelay;
      proxy_pass http://seaside/$1$is_args$args;
    }

    location ~ ^/deckside/(.*)$ {
      set $pillar "deckside";
      limit_req zone=perip burst=10 nodelay;
      proxy_pass http://deckside/$1$is_args$args;
    }

    location ~ ^/dockside/(.*)$ {
      set $pillar "dockside";
      limit_req zone=perip burst=10 nodelay;
      proxy_pass http://dockside/$1$is_args$args;
    }

    location ~ ^/marketside/(.*)$ {
      set $pillar "marketside";
      limit_req zone=perip burst=15 nodelay;
      proxy_pass http://marketside/$1$is_args$args;
    }

    location = /health { return 200 "OK\n"; }
  }
}
